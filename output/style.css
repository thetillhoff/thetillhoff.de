:root {
  /* color-scheme: light dark; already set in static html */
  /* --main-color-h: 240;
  --main-color-s: 0.8;
  --main-color-l: 0.4; */
  --main-color-h: 230;
  --main-color-s: 50%;
  --main-color-l: 40%;
  --main-color-a: 1;
  --main-color: hsla(var(--main-color-h), var(--main-color-s), var(--main-color-l), var(--main-color-a));
  /* border-color: hsla(from var(--color) h s calc(l - 10%) a); */

  --font-size: 1rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --highlight-color: hsla(0, 0%, 100%, 0.1);
  }

  /* "re-colorize" in dark mode (less intense colors) TODO disabled because currently no images are on the page */
  /* img:not([src*='.svg']) {
    filter: grayscale(50%);
  } */
  img[src*='.svg'] {
    filter: invert(100%);
  }
}
@media (prefers-color-scheme: light) {
  :root {
    --highlight-color: hsla(0, 0%, 0%, 0.1);
  }
}

body {
  min-height: 100vh;
  display: flex;
  justify-content: normal;
  align-items: center;
  flex-direction: column;
  margin: 0;

  font-size: var(--font-size);
}

* {
  font-family: "Open Sans", sans-serif;
  box-sizing: content-box; /* remove strange behaviour of some native elements - looking at you _button_! */

  /* antialiasing */
  /* -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; */
  /* subpixel antialiasing */
  /* -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto; */
}

p {
  line-height: 1.5;
}

h1 {
  margin-top: 4rem;
}

.centeredContent {
  margin-top: auto;
}

a:link, a:visited, a:active {
  color: inherit;
}


/* responsiveness */
.portrait {
  display: inherit;
}
.landscape {
  display: none;
}
@media only screen and (orientation: landscape) {
  .portrait {
    display: none;
  }
  .landscape {
    display: inherit;
  }
}

nav {
  width: 100%;
  display: flex;

  border-bottom: 4px solid;
  border-color: var(--main-color);
}

nav a {
  padding: 1rem;
}

nav a.logo {
  /* color: #000; */
  font-size: calc(2*var(--font-size));
  font-weight: bold;
  text-decoration: none;
  padding-left: 0;
}

nav a:not(.logo) {
  margin-right: 2rem;
}

/* colors */
nav a:not(.logo):hover {
  background-color: var(--highlight-color);
  /* background-color: rgba(var(--highlight-rgb),0.5); */
  /* backdrop-filter: brightness(calc(1+0.5)); */
  /* backdrop-filter: brightness(calc(var(--brightness) + 0.5)); */
}

/* portraitNav */
#portraitNav {
  padding: 1rem 0;
}

#portraitNav-label {
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  margin-right: 1.5rem;
  margin-top: 1.5rem;
  width: 3rem;
}

#portraitNav-toggle:checked ~ #portraitNav {
  display: inherit;
}
#portraitNav-toggle:checked ~ div {
  /* there is only one div directly below the body tag and it represents the pages contents */
  display: none;
}


#portraitNav > a {
  margin: 1rem;
}

div {
  display: flex;
  /* margin-bottom: auto; */
}

.textContainer {
  /* max-width: 50rem; */
  max-width: 1150px;
  padding-left: 2rem;
  padding-right: 2rem;
}

.fullWidth {
  width: 100%;
}

.verticalCentered {
  margin-left: auto;
  margin-right: auto;
}
.horizontalCentered {
  margin-top: auto;
  margin-bottom: auto;
}
  
.vertical {
  flex-direction: column;
}
.vertical.spaced > * {
  margin-top: 1rem;
}
.vertical.spaced > *:first-child {
  margin-top: 0;
}
.spaced:not(.vertical) > * {
  margin-left: 1rem;
}
.spaced:not(.vertical) > *:first-child {
  margin-left: 0;
}

.verticalCenteredContent {
  justify-content: center;
}
.horizontalCenteredContent {
  align-items: center;
}

.rtl {
  margin-left: auto;
}

/* form */

div.form label {
  margin-top: 1rem;
}

div.form button,
div.form .button {
  margin-top: 3rem;
  margin-left: 0;
  width: 10rem;
}

/* hidden */

.hidden {
  display: none !important;
}

/* grid */
div.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(14rem, 1fr));
  grid-gap: 2rem;
}

footer {
  margin-top: auto;
  padding-top: 1rem;

  text-align: center;
}

/* general styling */
button,
a.button {
  /* positioning, size */
  /* 0.5 is kind of a random number, but applied on all button paddings */
  padding: calc( 1rem * 0.5);
  height: 1rem;
  min-width: 1rem;

  text-align: center;

  font-size: inherit;

  /* unify button styling */
  /* display: inline; */
  float: left;
  outline: none;
  cursor: pointer;
  text-decoration: none;

  /* border */
  border-style: solid;
  border-width: 2px;
  border-radius: 5px;

  margin-left: 1rem;

  /* color */
  color: currentColor;
  transition: background-color 0.2s ease-in-out;
}

/* colors */
button:hover,
a.button:hover {
  background-color: var(--highlight-color);
}

button:first-child,
a.button:first-child {
  margin-left: 0;
}

/* sizes */
button,
a.button {
  padding: calc(1rem * 0.6);
  height: 1rem;
  min-width: 1rem;
  font-size: 1rem;
}

button.large,
a.button.large {
  padding: calc(1rem * 1.2 * 0.6);
  height: calc(1rem * 1.2);
  min-width: calc(1rem * 1.2);
  font-size: calc(1rem * 1.2);
}
button.big,
a.button.big {
  padding: calc(1rem * 1.4 * 0.6);
  height: calc(1rem * 1.4);
  min-width: calc(1rem * 1.4);
  font-size: calc(1rem * 1.4);
}
button.huge,
a.button.huge {
  padding: calc(1rem * 1.6 * 0.6);
  height: calc(1rem * 1.6);
  min-width: calc(1rem * 1.6);
  font-size: calc(1rem * 1.6);
}

/* inline */
button.inline,
a.button.inline {
  float: none;
}

/* borderless */
button.borderless,
a.button.borderless {
  border: none;
}

/* contains multiple actionable elements */
.group > button,
.group > a.button {
  border-radius: 0px;
  border-left: none;
  margin-left: 0;
}

.group > button:first-child,
.group > a.button:first-child {
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
  border-left: solid;
}

.group > button:last-child,
.group > a.button:last-child {
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
}


/* icon button */
button.icon,
a.button.icon {
  height: calc(1rem * 1.1);
  min-width: calc(1rem * 1.1);
  /* padding: calc(1rem * 0.5 - (1rem * 1.2 - 1rem) / 2); */

  /* center contents */
  display: flex;
  justify-content: center;
  align-items: center;

  aspect-ratio: 1/1;
}
button.large .icon,
a.button.large .icon {
  height: calc(1rem * 1.1 * 1.2);
  min-width: calc(1rem * 1.1 * 1.2);
  /* padding: calc(1rem * 1.2 * 0.5 - (1rem * 1.2 * 1.2 - 1rem * 1.2) / 2); */
}
button.big .icon,
a.button.big .icon {
  height: calc(1rem * 1.1 * 1.4);
  min-width: calc(1rem * 1.1 * 1.4);
  /* padding: calc(1rem * 1.4 * 0.5 - (1rem * 1.2 * 1.4 - 1rem * 1.4) / 2); */
}
button.huge .icon,
a.button.huge .icon {
  height: calc(1rem * 1.1 * 1.6);
  min-width: calc(1rem * 1.1 * 1.6);
  /* padding: calc(1rem * 1.6 * 0.5 - (1rem * 1.2 * 1.6 - 1rem * 1.6) / 2); */
}
